FROM nginx:alpine

# Copy source code. Note that src/venv should be in .dockerignore
RUN mkdir /src
COPY src /src
COPY ./requirements.txt /requirements.txt

# Copy the nginx config file
RUN mkdir /config
COPY ./config/nginx.conf /config/nginx.conf

WORKDIR /src

# Separate the update and upgrade process to save time during development.
# Make sure that this runs when you build the production server 
RUN apk update                                                              && \
    apk --no-cache upgrade                                                  && \

# Install requirements and remove unneeded packages
    apk --no-cache add python3 python3-dev postgresql py-psycopg2 \
        postgresql-dev curl gnupg nodejs linux-headers build-base \
        libffi-dev bash                                                     && \
    pip3 --no-cache-dir install --upgrade pip                               && \
    pip3 --no-cache-dir install -r /requirements.txt                        && \
    pip3 --no-cache-dir install gunicorn                                    && \

# Link the yarn binary to /bin. The command to create ~/.profile is only to
# quash an inconsequential error message from yarn's installation script that
# it can't set $PATH in a profile.
    touch ~/.profile                                                        && \ 
    curl -o- -L https://yarnpkg.com/install.sh | sh                         && \
    ln -s /root/.yarn/bin/yarn /bin/yarn                                    && \
    ln -s /root/.yarn/bin/yarnpkg /bin/yarnpkg                              && \
    ln -s /root/.yarn/bin/yarn.js /bin/yarn.js                              && \

# Install preact-cli and build the frontend
    yarn --verbose global add preact-cli                                    && \
    cd /src/frontend                                                        && \
    yarn install                                                            && \
    yarn global add gulp                                                    && \
    yarn cache clean                                                        && \
    cd /src                                                                 && \
    gulp deploy --gulpfile /src/frontend/gulpfile.js                        && \
    rm -rf /src/frontend/node_modules /usr/local/share/.config/yarn \
           /usr/lib/node_modules                                            && \
    apk del build-base python3-dev postgresql-dev linux-headers \
            gnupg libffi-dev                                                && \
    rm -rf /var/cache/apk/*

EXPOSE 80

WORKDIR /src/lm

CMD sh /src/lm/sleep_until_prod_pg_isready.sh                               && \
    python3 manage.py migrate                                               && \
    python3 manage.py collectstatic --no-input                              && \
    gunicorn -D --bind unix:/gunicorn.sock lm.wsgi:application              && \
    echo                                                                    && \
    echo "Docker containers are up; server at: http://0.0.0.0:80/"          && \
    nginx -c /config/nginx.conf -g 'daemon off;'
