FROM nginx:alpine

# Copy source code, but do not copy venv to minimise build size
RUN mkdir /src
COPY src/lm /src/lm
COPY ./requirements.txt /requirements.txt

WORKDIR /src

# Separate the update and upgrade process to save time during development
# Make sure that this runs when you build the production server 
RUN apk update && \
    apk --no-cache upgrade

# Install requirements and remove unneeded packages at one
# shot to minimise build size
RUN apk --no-cache add python3 python3-dev \
        py-psycopg2 postgresql-dev \
        linux-headers \
        build-base libffi-dev && \

    pip3 install --upgrade pip && \

    pip3 install -r /requirements.txt && \

    pip3 install gunicorn && \

    apk del build-base python3-dev \
            postgresql-dev linux-headers && \

    rm -rf /var/cache/apk/*


# copy nginx config file
RUN mkdir /config
COPY ./config/nginx.conf /config/nginx.conf

EXPOSE 80

WORKDIR /src/lm

RUN python3 manage.py migrate
RUN python3 manage.py collectstatic --no-input

CMD gunicorn -D --bind unix:/gunicorn.sock lm.wsgi:application && \
    nginx -c /config/nginx.conf -g 'daemon off;'
